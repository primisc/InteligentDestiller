.TH "C:/workspace/Projeto/InteligentDestiller/include/OS.h" 3 "IntelligentDestiller" \" -*- nroff -*-
.ad l
.nh
.SH NAME
C:/workspace/Projeto/InteligentDestiller/include/OS.h \- Header file for the OS project\&.  

.SH SYNOPSIS
.br
.PP
\fR#include 'WiFiManager\&.h'\fP
.br
\fR#include 'esp_netif\&.h'\fP
.br
\fR#include 'ESPAsyncWebServer\&.h'\fP
.br
\fR#include 'SPIFFS\&.h'\fP
.br
\fR#include 'MD\&.h'\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBDEBUGlog\fP   0"
.br
.RI "Debug mode\&. "
.ti -1c
.RI "#define \fBPIN_SW_AUTO\fP   32"
.br
.RI "I/O Map Header\&. "
.ti -1c
.RI "#define \fBPIN_SALARM\fP   25"
.br
.ti -1c
.RI "#define \fBPIN_SW_MAN\fP   26"
.br
.ti -1c
.RI "#define \fBPIN_SMIN\fP   27"
.br
.ti -1c
.RI "#define \fBPIN_SMAX\fP   14"
.br
.ti -1c
.RI "#define \fBPIN_INPUT_COUNT\fP   5"
.br
.ti -1c
.RI "#define \fBPOS_SW_MAN\fP   0"
.br
.ti -1c
.RI "#define \fBPOS_SMIN\fP   1"
.br
.ti -1c
.RI "#define \fBPOS_SMAX\fP   2"
.br
.ti -1c
.RI "#define \fBPOS_SW_AUTO\fP   3"
.br
.ti -1c
.RI "#define \fBPOS_SALARM\fP   4"
.br
.ti -1c
.RI "#define \fBPIN_RAQ\fP   23"
.br
.RI "Output Pins Definitions\&. "
.ti -1c
.RI "#define \fBPIN_BMB\fP   22"
.br
.ti -1c
.RI "#define \fBPIN_VALV_WATER_OUT\fP   21"
.br
.ti -1c
.RI "#define \fBPIN_VALV_WATER_IN\fP   19"
.br
.ti -1c
.RI "#define \fBPIN_IND_ALARM\fP   18"
.br
.ti -1c
.RI "#define \fBPIN_IND_MIN\fP   05"
.br
.ti -1c
.RI "#define \fBPIN_IND_MAX\fP   04"
.br
.ti -1c
.RI "#define \fBPIN_IND_AUTO\fP   15"
.br
.ti -1c
.RI "#define \fBPIN_IND_MAN\fP   33"
.br
.ti -1c
.RI "#define \fBPIN_OUTPUT_COUNT\fP   9"
.br
.ti -1c
.RI "#define \fBPOS_RAQ\fP   0"
.br
.ti -1c
.RI "#define \fBPOS_BMB\fP   1"
.br
.ti -1c
.RI "#define \fBPOS_VALV_WATER_OUT\fP   2"
.br
.ti -1c
.RI "#define \fBPOS_VALV_WATER_IN\fP   3"
.br
.ti -1c
.RI "#define \fBPOS_IND_ALARM\fP   4"
.br
.ti -1c
.RI "#define \fBPOS_IND_MIN\fP   5"
.br
.ti -1c
.RI "#define \fBPOS_IND_MAX\fP   6"
.br
.ti -1c
.RI "#define \fBPOS_IND_AUTO\fP   7"
.br
.ti -1c
.RI "#define \fBPOS_IND_MAN\fP   8"
.br
.ti -1c
.RI "#define \fBON\fP   HIGH"
.br
.RI "ON/OFF Definitions for I/O pins (HIGH/LOW) "
.ti -1c
.RI "#define \fBOFF\fP   LOW"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBloop2\fP (void *pvParameters)"
.br
.RI "MAIN\&. "
.ti -1c
.RI "void \fBinitMultiCore\fP ()"
.br
.RI "Main loop to run in core 1\&. "
.ti -1c
.RI "void \fBinitFS\fP ()"
.br
.RI "Inicia o segundo core\&. "
.ti -1c
.RI "void \fBinitPinsOutputs\fP ()"
.br
.RI "Inicia o sistema de arquivos\&. "
.ti -1c
.RI "void \fBinitPinsInputs\fP ()"
.br
.RI "Inicia os outputs\&. "
.ti -1c
.RI "bool \fBgetWaterMax\fP ()"
.br
.RI "Inicia os inputs\&. "
.ti -1c
.RI "bool \fBgetWaterMin\fP ()"
.br
.RI "Retorna estado do sensor de agua de maximo\&. "
.ti -1c
.RI "bool \fBgetAlarm\fP ()"
.br
.RI "Retorna estado do sensor de agua de minimo\&. "
.ti -1c
.RI "bool \fBgetAlarmIND\fP ()"
.br
.RI "Retorna estado do alarme\&. "
.ti -1c
.RI "bool \fBgetIndAuto\fP ()"
.br
.RI "Retorna estado do indicador de alarme\&. "
.ti -1c
.RI "bool \fBgetAutoModeSW\fP ()"
.br
.RI "Retorna estado do modo auto\&. "
.ti -1c
.RI "bool \fBgetManualMode\fP ()"
.br
.RI "Retorna estado do interruptor auto\&. "
.ti -1c
.RI "bool \fBgetResistor\fP ()"
.br
.RI "Retorna estado do botao manual\&. "
.ti -1c
.RI "bool \fBgetValv_Water_In\fP ()"
.br
.RI "Retorna estado do resistor\&. "
.ti -1c
.RI "bool \fBgetValv_Water_Out\fP ()"
.br
.RI "Retorna estado da entrada de agua\&. "
.ti -1c
.RI "bool \fBgetPump\fP ()"
.br
.RI "Retorna estado da valvula de vapor\&. "
.ti -1c
.RI "void \fBsetIndMax\fP (bool state)"
.br
.RI "Retorna estado da bomba de agua\&. "
.ti -1c
.RI "void \fBsetIndMin\fP (bool state)"
.br
.RI "Liga/desliga o indicador luminoso nivel agua maximo\&. "
.ti -1c
.RI "void \fBsetIndAlarm\fP (bool state)"
.br
.RI "Liga/desliga o indicador luminoso nivel agua minimo\&. "
.ti -1c
.RI "void \fBsetIndMan\fP (bool state)"
.br
.RI "Liga/desliga o indicador luminoso alarme\&. "
.ti -1c
.RI "void \fBsetPump\fP (bool state)"
.br
.RI "Liga/desliga o indicador luminoso modo manual\&. "
.ti -1c
.RI "void \fBsetValveWaterIn\fP (bool state)"
.br
.RI "Liga/desliga o indicador luminoso da bomba de agua\&. "
.ti -1c
.RI "void \fBsetValveWaterOut\fP (bool state)"
.br
.RI "Liga/desliga o indicador luminoso da valvula 1\&. "
.ti -1c
.RI "void \fBsetResistor\fP (bool state)"
.br
.RI "Liga/desliga o indicador luminoso da valvula 2\&. "
.ti -1c
.RI "void \fBsetIndAuto\fP (bool state1)"
.br
.RI "Liga/desliga o indicador luminoso da resistencia\&. "
.ti -1c
.RI "void \fBwriteOutputs\fP ()"
.br
.RI "Liga/desliga o modo auto\&. "
.ti -1c
.RI "void \fBreadInputs\fP ()"
.br
.RI "Atualiza as saidas\&. "
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "AsyncWebSocket \fBws\fP"
.br
.RI "Libraries\&. "
.ti -1c
.RI "AsyncWebServer \fBserver\fP"
.br
.RI "WebSocket Server\&. "
.ti -1c
.RI "bool \fBDEBUG\fP"
.br
.RI "WebServer\&. "
.in -1c
.SH "Detailed Description"
.PP 
Header file for the OS project\&. 


.PP
\fBAuthor\fP
.RS 4
SÃ©rgio Carmo
.RE
.PP
\fBVersion\fP
.RS 4
1\&.0 
.RE
.PP

.SH "Macro Definition Documentation"
.PP 
.SS "#define DEBUGlog   0"

.PP
Debug mode\&. 
.SS "#define OFF   LOW"

.SS "#define ON   HIGH"

.PP
ON/OFF Definitions for I/O pins (HIGH/LOW) 
.SS "#define PIN_BMB   22"

.SS "#define PIN_IND_ALARM   18"

.SS "#define PIN_IND_AUTO   15"

.SS "#define PIN_IND_MAN   33"

.SS "#define PIN_IND_MAX   04"

.SS "#define PIN_IND_MIN   05"

.SS "#define PIN_INPUT_COUNT   5"

.SS "#define PIN_OUTPUT_COUNT   9"

.SS "#define PIN_RAQ   23"

.PP
Output Pins Definitions\&. 
.SS "#define PIN_SALARM   25"

.SS "#define PIN_SMAX   14"

.SS "#define PIN_SMIN   27"

.SS "#define PIN_SW_AUTO   32"

.PP
I/O Map Header\&. Input Pins Definitions 
.SS "#define PIN_SW_MAN   26"

.SS "#define PIN_VALV_WATER_IN   19"

.SS "#define PIN_VALV_WATER_OUT   21"

.SS "#define POS_BMB   1"

.SS "#define POS_IND_ALARM   4"

.SS "#define POS_IND_AUTO   7"

.SS "#define POS_IND_MAN   8"

.SS "#define POS_IND_MAX   6"

.SS "#define POS_IND_MIN   5"

.SS "#define POS_RAQ   0"

.SS "#define POS_SALARM   4"

.SS "#define POS_SMAX   2"

.SS "#define POS_SMIN   1"

.SS "#define POS_SW_AUTO   3"

.SS "#define POS_SW_MAN   0"

.SS "#define POS_VALV_WATER_IN   3"

.SS "#define POS_VALV_WATER_OUT   2"

.SH "Function Documentation"
.PP 
.SS "bool getAlarm ()"

.PP
Retorna estado do sensor de agua de minimo\&. Retorna estado do sensor de agua de minimo\&.

.PP
This function returns the state of the alarm\&.

.PP
\fBReturns\fP
.RS 4
true 

.PP
false 
.RE
.PP

.SS "bool getAlarmIND ()"

.PP
Retorna estado do alarme\&. Retorna estado do alarme\&.

.PP
This function returns the state of the alarm\&.

.PP
\fBReturns\fP
.RS 4
true 

.PP
false 
.RE
.PP

.SS "bool getAutoModeSW ()"

.PP
Retorna estado do modo auto\&. Retorna estado do modo auto\&.

.PP
This function returns the state of the auto mode switch\&.

.PP
\fBReturns\fP
.RS 4
true 

.PP
false 
.RE
.PP

.SS "bool getIndAuto ()"

.PP
Retorna estado do indicador de alarme\&. Retorna estado do indicador de alarme\&.

.PP
This function returns the state of the max indicator\&.

.PP
\fBReturns\fP
.RS 4
true 

.PP
false 
.RE
.PP

.SS "bool getManualMode ()"

.PP
Retorna estado do interruptor auto\&. Retorna estado do interruptor auto\&.

.PP
This function returns the state of the manual mode switch\&.

.PP
\fBReturns\fP
.RS 4
true 

.PP
false 
.RE
.PP

.SS "bool getPump ()"

.PP
Retorna estado da valvula de vapor\&. Retorna estado da valvula de vapor\&.

.PP
This function returns the state of the water pump\&.

.PP
\fBReturns\fP
.RS 4
true 

.PP
false 
.RE
.PP

.SS "bool getResistor ()"

.PP
Retorna estado do botao manual\&. Retorna estado do botao manual\&.

.PP
This function returns the state of the min indicator\&.

.PP
\fBReturns\fP
.RS 4
true 

.PP
false 
.RE
.PP

.SS "bool getValv_Water_In ()"

.PP
Retorna estado do resistor\&. Retorna estado do resistor\&.

.PP
This function returns the state of the alarm indicator\&.

.PP
\fBReturns\fP
.RS 4
true 

.PP
false 
.RE
.PP

.SS "bool getValv_Water_Out ()"

.PP
Retorna estado da entrada de agua\&. Retorna estado da entrada de agua\&.

.PP
This function returns the state of the water out valve\&.

.PP
\fBReturns\fP
.RS 4
true 

.PP
false 
.RE
.PP

.SS "bool getWaterMax ()"

.PP
Inicia os inputs\&. Inicia os inputs\&.

.PP
Get the Water Max object

.PP
This function returns the state of the water max sensor\&.

.PP
\fBReturns\fP
.RS 4
true 

.PP
false 
.RE
.PP

.SS "bool getWaterMin ()"

.PP
Retorna estado do sensor de agua de maximo\&. Retorna estado do sensor de agua de maximo\&.

.PP
This function returns the state of the water min sensor\&.

.PP
\fBReturns\fP
.RS 4
true 

.PP
false 
.RE
.PP

.SS "void initFS ()"

.PP
Inicia o segundo core\&. LittleFS

.PP
Inicia o segundo core\&.

.PP
Initialize File System (SPIFFS)

.PP
This function is responsible for initializing the File System (SPIFFS)\&.

.PP
\fBNote\fP
.RS 4
Initialize SPIFFS
.RE
.PP
\fBReturns\fP
.RS 4
void
.RE
.PP
.PP
.nf
initFS();
.fi
.PP
 Initialize SPIFFS
.SS "void initMultiCore ()"

.PP
Main loop to run in core 1\&. Multicore

.PP
Main loop to run in core 1\&.

.PP
<Function to initiate the 2nd core> Implements the 2nd core option to run 'loop2' function

.PP
Function to implement the task

.PP
Name of the task

.PP
Stack size in words

.PP
Task input parameter

.PP
Priority of the task

.PP
Task handle\&.

.PP
Core where the task should run
.SS "void initPinsInputs ()"

.PP
Inicia os outputs\&. Inicia os outputs\&.

.PP
Configure GPIOs as INPUTs

.PP
This function configures the GPIOs as INPUTs\&. The GPIOs are used to read the state of the switches and sensors\&. on/off sw

.PP
min sensor

.PP
max sensor

.PP
push sw

.PP
alarm
.SS "void initPinsOutputs ()"

.PP
Inicia o sistema de arquivos\&. I/O I/O Functions calls

.PP
Inicia o sistema de arquivos\&.

.PP
Configure GPIOs as OUTPUTs

.PP
This function configures the GPIOs as OUTPUTs\&. The GPIOs are used to control the indicators, valves, pump, and resistor\&. resistor

.PP
water in valve

.PP
water out valve

.PP
water pump

.PP
min indicator

.PP
max indicator

.PP
alarm indicator

.PP
manual indicator

.PP
auto indicator
.SS "void loop2 (void * pvParameters)"

.PP
MAIN\&. MAIN\&.

.PP
This function is responsible for running the second core operation\&.

.PP
\fBNote\fP
.RS 4
Initiate WIFI 

.PP
Cleanup clients 

.PP
WebTimer function
.RE
.PP
\fBSee also\fP
.RS 4
\fBinitWIFI()\fP 

.PP
ws\&.cleanupClients() 

.PP
\fBwebTimer()\fP
.RE
.PP
\fBParameters\fP
.RS 4
\fIpvParameters\fP 
.RE
.PP
Main loop

.PP
Cleanup clients

.PP
WebTimer function
.SS "void readInputs ()"

.PP
Atualiza as saidas\&. Atualiza as saidas\&.

.PP
Read ESP32 GPIOs and stores in the image array

.PP
Read all inputs and store in the image array

.PP
This function reads all the inputs and stores them in the image array\&. The image array is used to store the current state of the inputs and outputs\&. PIN_INPUT_COUNT = 5

.PP
Read the input from the GPIO
.SS "void setIndAlarm (bool state)"

.PP
Liga/desliga o indicador luminoso nivel agua minimo\&. Liga/desliga o indicador luminoso nivel agua minimo\&.

.PP
This function sets the state of the alarm indicator\&.

.PP
\fBParameters\fP
.RS 4
\fIstate\fP 
.RE
.PP
\fBReturns\fP
.RS 4
void 
.RE
.PP
Old state of the indicator

.PP
Condition to debug
.SS "void setIndAuto (bool state)"

.PP
Liga/desliga o indicador luminoso da resistencia\&. Liga/desliga o indicador luminoso da resistencia\&.

.PP
This function sets the state of the auto mode\&.

.PP
\fBParameters\fP
.RS 4
\fIstate\fP 
.RE
.PP
\fBReturns\fP
.RS 4
void 
.RE
.PP

.SS "void setIndMan (bool state)"

.PP
Liga/desliga o indicador luminoso alarme\&. Liga/desliga o indicador luminoso alarme\&.

.PP
This function sets the state of the manual indicator\&.

.PP
\fBParameters\fP
.RS 4
\fIstate\fP 
.RE
.PP
\fBReturns\fP
.RS 4
void 
.RE
.PP

.SS "void setIndMax (bool state)"

.PP
Retorna estado da bomba de agua\&. Retorna estado da bomba de agua\&.

.PP
Set the Ind Max object

.PP
This function sets the state of the max indicator\&.

.PP
\fBParameters\fP
.RS 4
\fIstate\fP 
.RE
.PP
\fBReturns\fP
.RS 4
void 
.RE
.PP
Old state of the indicator

.PP
Set the max indicator to ON

.PP
Condition to debug

.PP
Send the max indicator value to the web server

.PP
Set the max indicator to OFF

.PP
Send the max indicator value to the web server
.SS "void setIndMin (bool state)"

.PP
Liga/desliga o indicador luminoso nivel agua maximo\&. Liga/desliga o indicador luminoso nivel agua maximo\&.

.PP
This function sets the state of the min indicator\&.

.PP
\fBParameters\fP
.RS 4
\fIstate\fP 
.RE
.PP
\fBReturns\fP
.RS 4
void 
.RE
.PP
Old state of the indicator

.PP
Set the min indicator to ON

.PP
Send the min indicator value to the web server

.PP
Set the min indicator to OFF

.PP
Send the min indicator value to the web server
.SS "void setPump (bool state)"

.PP
Liga/desliga o indicador luminoso modo manual\&. Liga/desliga o indicador luminoso modo manual\&.

.PP
This function sets the state of the pump\&.

.PP
\fBParameters\fP
.RS 4
\fIstate\fP 
.RE
.PP
\fBReturns\fP
.RS 4
void 
.RE
.PP

.SS "void setResistor (bool state)"

.PP
Liga/desliga o indicador luminoso da valvula 2\&. Liga/desliga o indicador luminoso da valvula 2\&.

.PP
This function sets the state of the resistor\&.

.PP
\fBParameters\fP
.RS 4
\fIstate\fP 
.RE
.PP
\fBReturns\fP
.RS 4
void 
.RE
.PP

.SS "void setValveWaterIn (bool state)"

.PP
Liga/desliga o indicador luminoso da bomba de agua\&. Liga/desliga o indicador luminoso da bomba de agua\&.

.PP
This function sets the state of the water in valve\&.

.PP
\fBParameters\fP
.RS 4
\fIstate\fP 
.RE
.PP
\fBReturns\fP
.RS 4
void 
.RE
.PP

.SS "void setValveWaterOut (bool state)"

.PP
Liga/desliga o indicador luminoso da valvula 1\&. Liga/desliga o indicador luminoso da valvula 1\&.

.PP
This function sets the state of the water out valve\&.

.PP
\fBParameters\fP
.RS 4
\fIstate\fP 
.RE
.PP
\fBReturns\fP
.RS 4
void 
.RE
.PP

.SS "void writeOutputs ()"

.PP
Liga/desliga o modo auto\&. Liga/desliga o modo auto\&.

.PP
Write all outputs from the image array to the GPIOs

.PP
This function writes all the outputs from the image array to the GPIOs\&. The image array is used to store the current state of the inputs and outputs\&. PIN_OUTPUT_COUNT = 9

.PP
Write the output to the GPIO
.SH "Variable Documentation"
.PP 
.SS "bool DEBUG\fR [extern]\fP"

.PP
WebServer\&. 
.SS "AsyncWebServer server\fR [extern]\fP"

.PP
WebSocket Server\&. 
.SS "AsyncWebSocket ws\fR [extern]\fP"

.PP
Libraries\&. Wifi Libraries WiFi Manager 
.br
 ESP32 Network Interface Async Libraries Async Web Server SPIFFS Libraries SPI Flash File System MD Header 
.SH "Author"
.PP 
Generated automatically by Doxygen for IntelligentDestiller from the source code\&.
