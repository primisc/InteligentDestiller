.TH "src/OS_GPIO.cpp" 3 "IntelligentDestiller" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/OS_GPIO.cpp \- GPIO functions\&.  

.SH SYNOPSIS
.br
.PP
\fR#include 'OS\&.h'\fP
.br

.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBreadInputs\fP ()"
.br
.RI "Alarm state\&. "
.ti -1c
.RI "void \fBwriteOutputs\fP ()"
.br
.RI "Write Outputs from array image to GPIO\&. "
.ti -1c
.RI "void \fBinitPinsInputs\fP ()"
.br
.RI "Configure GPIOs as INPUT\&. "
.ti -1c
.RI "void \fBinitPinsOutputs\fP ()"
.br
.RI "Configure GPIOs as OUTPUTs\&. "
.ti -1c
.RI "bool \fBgetWaterMax\fP ()"
.br
.RI "GETS BLOCK\&. "
.ti -1c
.RI "bool \fBgetWaterMin\fP ()"
.br
.RI "Get the Water Min object\&. "
.ti -1c
.RI "bool \fBgetAlarm\fP ()"
.br
.RI "Get the Alarm object\&. "
.ti -1c
.RI "bool \fBgetAlarmIND\fP ()"
.br
.RI "Get the Alarm State object\&. "
.ti -1c
.RI "bool \fBgetAutoModeSW\fP ()"
.br
.RI "Get the Auto Mode SW object\&. "
.ti -1c
.RI "bool \fBgetManualMode\fP ()"
.br
.RI "Get the Manual Mode object\&. "
.ti -1c
.RI "bool \fBgetIndAuto\fP ()"
.br
.RI "Get the Ind Max object\&. "
.ti -1c
.RI "bool \fBgetResistor\fP ()"
.br
.RI "Get the Ind Min object\&. "
.ti -1c
.RI "bool \fBgetValv_Water_In\fP ()"
.br
.RI "Get the Ind Alarm object\&. "
.ti -1c
.RI "bool \fBgetValv_Water_Out\fP ()"
.br
.RI "Get the Valv Water Out object\&. "
.ti -1c
.RI "bool \fBgetPump\fP ()"
.br
.RI "Get the Pump object\&. "
.ti -1c
.RI "void \fBsetIndMax\fP (bool state)"
.br
.RI "SETS BLOCK\&. "
.ti -1c
.RI "void \fBsetIndMin\fP (bool state)"
.br
.RI "Set the Ind Min object\&. "
.ti -1c
.RI "void \fBsetIndAlarm\fP (bool state)"
.br
.RI "Set the Ind Alarm object\&. "
.ti -1c
.RI "void \fBsetIndMan\fP (bool state)"
.br
.RI "Set the Ind Man object\&. "
.ti -1c
.RI "void \fBsetIndAuto\fP (bool state)"
.br
.RI "Set the Auto Mode object\&. "
.ti -1c
.RI "void \fBsetPump\fP (bool state)"
.br
.RI "Set the Pump object\&. "
.ti -1c
.RI "void \fBsetValveWaterIn\fP (bool state)"
.br
.RI "Set the Valve Water In object\&. "
.ti -1c
.RI "void \fBsetValveWaterOut\fP (bool state)"
.br
.RI "Set the Valve Water Out object\&. "
.ti -1c
.RI "void \fBsetResistor\fP (bool state)"
.br
.RI "Set the Resistor object\&. "
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "uint8_t \fBinputVarsImage\fP [5]"
.br
.RI "GPIO Images\&. "
.ti -1c
.RI "const uint8_t \fBinputVarsPINs\fP [] = {\fBPIN_SW_MAN\fP, \fBPIN_SMIN\fP, \fBPIN_SMAX\fP, \fBPIN_SW_AUTO\fP, \fBPIN_SALARM\fP}"
.br
.RI "Input variables image\&. "
.ti -1c
.RI "uint8_t \fBoutputVarsImage\fP [9]"
.br
.RI "Input variables pins\&. "
.ti -1c
.RI "const uint8_t \fBoutputVarsPINs\fP []"
.br
.RI "Output variables image\&. "
.ti -1c
.RI "bool \fBALARM_STATE\fP = \fBOFF\fP"
.br
.RI "Output variables pins\&. "
.in -1c
.SH "Detailed Description"
.PP 
GPIO functions\&. 


.PP
\fBAuthor\fP
.RS 4
SÃ©rgio Carmo (19749@ipportalegre.pt) 
.RE
.PP
\fBVersion\fP
.RS 4
0\&.1 
.RE
.PP

.SH "Function Documentation"
.PP 
.SS "bool getAlarm ()"

.PP
Get the Alarm object\&. Retorna estado do sensor de agua de minimo\&.

.PP
This function returns the state of the alarm\&.

.PP
\fBReturns\fP
.RS 4
true 

.PP
false 
.RE
.PP

.SS "bool getAlarmIND ()"

.PP
Get the Alarm State object\&. Retorna estado do alarme\&.

.PP
This function returns the state of the alarm\&.

.PP
\fBReturns\fP
.RS 4
true 

.PP
false 
.RE
.PP

.SS "bool getAutoModeSW ()"

.PP
Get the Auto Mode SW object\&. Retorna estado do modo auto\&.

.PP
This function returns the state of the auto mode switch\&.

.PP
\fBReturns\fP
.RS 4
true 

.PP
false 
.RE
.PP

.SS "bool getIndAuto ()"

.PP
Get the Ind Max object\&. Retorna estado do indicador de alarme\&.

.PP
This function returns the state of the max indicator\&.

.PP
\fBReturns\fP
.RS 4
true 

.PP
false 
.RE
.PP

.SS "bool getManualMode ()"

.PP
Get the Manual Mode object\&. Retorna estado do interruptor auto\&.

.PP
This function returns the state of the manual mode switch\&.

.PP
\fBReturns\fP
.RS 4
true 

.PP
false 
.RE
.PP

.SS "bool getPump ()"

.PP
Get the Pump object\&. Retorna estado da valvula de vapor\&.

.PP
This function returns the state of the water pump\&.

.PP
\fBReturns\fP
.RS 4
true 

.PP
false 
.RE
.PP

.SS "bool getResistor ()"

.PP
Get the Ind Min object\&. Retorna estado do botao manual\&.

.PP
This function returns the state of the min indicator\&.

.PP
\fBReturns\fP
.RS 4
true 

.PP
false 
.RE
.PP

.SS "bool getValv_Water_In ()"

.PP
Get the Ind Alarm object\&. Retorna estado do resistor\&.

.PP
This function returns the state of the alarm indicator\&.

.PP
\fBReturns\fP
.RS 4
true 

.PP
false 
.RE
.PP

.SS "bool getValv_Water_Out ()"

.PP
Get the Valv Water Out object\&. Retorna estado da entrada de agua\&.

.PP
This function returns the state of the water out valve\&.

.PP
\fBReturns\fP
.RS 4
true 

.PP
false 
.RE
.PP

.SS "bool getWaterMax ()"

.PP
GETS BLOCK\&. Inicia os inputs\&.

.PP
Get the Water Max object

.PP
This function returns the state of the water max sensor\&.

.PP
\fBReturns\fP
.RS 4
true 

.PP
false 
.RE
.PP

.SS "bool getWaterMin ()"

.PP
Get the Water Min object\&. Retorna estado do sensor de agua de maximo\&.

.PP
This function returns the state of the water min sensor\&.

.PP
\fBReturns\fP
.RS 4
true 

.PP
false 
.RE
.PP

.SS "void initPinsInputs ()"

.PP
Configure GPIOs as INPUT\&. Inicia os outputs\&.

.PP
Configure GPIOs as INPUTs

.PP
This function configures the GPIOs as INPUTs\&. The GPIOs are used to read the state of the switches and sensors\&. on/off sw

.PP
min sensor

.PP
max sensor

.PP
push sw

.PP
alarm
.SS "void initPinsOutputs ()"

.PP
Configure GPIOs as OUTPUTs\&. Inicia o sistema de arquivos\&.

.PP
Configure GPIOs as OUTPUTs

.PP
This function configures the GPIOs as OUTPUTs\&. The GPIOs are used to control the indicators, valves, pump, and resistor\&. resistor

.PP
water in valve

.PP
water out valve

.PP
water pump

.PP
min indicator

.PP
max indicator

.PP
alarm indicator

.PP
manual indicator

.PP
auto indicator
.SS "void readInputs ()"

.PP
Alarm state\&. Read ESP32 GPIOs and stores in the image array

.PP
Read all inputs and store in the image array

.PP
This function reads all the inputs and stores them in the image array\&. The image array is used to store the current state of the inputs and outputs\&. PIN_INPUT_COUNT = 5

.PP
Read the input from the GPIO
.SS "void setIndAlarm (bool state)"

.PP
Set the Ind Alarm object\&. Liga/desliga o indicador luminoso nivel agua minimo\&.

.PP
This function sets the state of the alarm indicator\&.

.PP
\fBParameters\fP
.RS 4
\fIstate\fP 
.RE
.PP
\fBReturns\fP
.RS 4
void 
.RE
.PP
Old state of the indicator

.PP
Condition to debug
.SS "void setIndAuto (bool state)"

.PP
Set the Auto Mode object\&. Liga/desliga o indicador luminoso da resistencia\&.

.PP
This function sets the state of the auto mode\&.

.PP
\fBParameters\fP
.RS 4
\fIstate\fP 
.RE
.PP
\fBReturns\fP
.RS 4
void 
.RE
.PP

.SS "void setIndMan (bool state)"

.PP
Set the Ind Man object\&. Liga/desliga o indicador luminoso alarme\&.

.PP
This function sets the state of the manual indicator\&.

.PP
\fBParameters\fP
.RS 4
\fIstate\fP 
.RE
.PP
\fBReturns\fP
.RS 4
void 
.RE
.PP

.SS "void setIndMax (bool state)"

.PP
SETS BLOCK\&. Retorna estado da bomba de agua\&.

.PP
Set the Ind Max object

.PP
This function sets the state of the max indicator\&.

.PP
\fBParameters\fP
.RS 4
\fIstate\fP 
.RE
.PP
\fBReturns\fP
.RS 4
void 
.RE
.PP
Old state of the indicator

.PP
Set the max indicator to ON

.PP
Condition to debug

.PP
Send the max indicator value to the web server

.PP
Set the max indicator to OFF

.PP
Send the max indicator value to the web server
.SS "void setIndMin (bool state)"

.PP
Set the Ind Min object\&. Liga/desliga o indicador luminoso nivel agua maximo\&.

.PP
This function sets the state of the min indicator\&.

.PP
\fBParameters\fP
.RS 4
\fIstate\fP 
.RE
.PP
\fBReturns\fP
.RS 4
void 
.RE
.PP
Old state of the indicator

.PP
Set the min indicator to ON

.PP
Send the min indicator value to the web server

.PP
Set the min indicator to OFF

.PP
Send the min indicator value to the web server
.SS "void setPump (bool state)"

.PP
Set the Pump object\&. Liga/desliga o indicador luminoso modo manual\&.

.PP
This function sets the state of the pump\&.

.PP
\fBParameters\fP
.RS 4
\fIstate\fP 
.RE
.PP
\fBReturns\fP
.RS 4
void 
.RE
.PP

.SS "void setResistor (bool state)"

.PP
Set the Resistor object\&. Liga/desliga o indicador luminoso da valvula 2\&.

.PP
This function sets the state of the resistor\&.

.PP
\fBParameters\fP
.RS 4
\fIstate\fP 
.RE
.PP
\fBReturns\fP
.RS 4
void 
.RE
.PP

.SS "void setValveWaterIn (bool state)"

.PP
Set the Valve Water In object\&. Liga/desliga o indicador luminoso da bomba de agua\&.

.PP
This function sets the state of the water in valve\&.

.PP
\fBParameters\fP
.RS 4
\fIstate\fP 
.RE
.PP
\fBReturns\fP
.RS 4
void 
.RE
.PP

.SS "void setValveWaterOut (bool state)"

.PP
Set the Valve Water Out object\&. Liga/desliga o indicador luminoso da valvula 1\&.

.PP
This function sets the state of the water out valve\&.

.PP
\fBParameters\fP
.RS 4
\fIstate\fP 
.RE
.PP
\fBReturns\fP
.RS 4
void 
.RE
.PP

.SS "void writeOutputs ()"

.PP
Write Outputs from array image to GPIO\&. Liga/desliga o modo auto\&.

.PP
Write all outputs from the image array to the GPIOs

.PP
This function writes all the outputs from the image array to the GPIOs\&. The image array is used to store the current state of the inputs and outputs\&. PIN_OUTPUT_COUNT = 9

.PP
Write the output to the GPIO
.SH "Variable Documentation"
.PP 
.SS "bool ALARM_STATE = \fBOFF\fP"

.PP
Output variables pins\&. 
.SS "uint8_t inputVarsImage[5]"

.PP
GPIO Images\&. 
.SS "const uint8_t inputVarsPINs[] = {\fBPIN_SW_MAN\fP, \fBPIN_SMIN\fP, \fBPIN_SMAX\fP, \fBPIN_SW_AUTO\fP, \fBPIN_SALARM\fP}"

.PP
Input variables image\&. 
.SS "uint8_t outputVarsImage[9]"

.PP
Input variables pins\&. 
.SS "const uint8_t outputVarsPINs[]"
\fBInitial value:\fP
.nf
= {PIN_RAQ, PIN_BMB, PIN_VALV_WATER_OUT, PIN_VALV_WATER_IN,
                                  PIN_IND_ALARM, PIN_IND_MIN, PIN_IND_MAX, PIN_IND_AUTO, PIN_IND_MAN}
.PP
.fi

.PP
Output variables image\&. 
.SH "Author"
.PP 
Generated automatically by Doxygen for IntelligentDestiller from the source code\&.
